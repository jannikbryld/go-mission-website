version: '3.8'

services:
  go-mission-website:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    pull_policy: build
    ports:
      - "9639:3000"
    environment:
      - NODE_ENV=production
      - NITRO_HOST=0.0.0.0
      - NITRO_PORT=3000
      - DIRECTUS_URL=https://cms.bryld.dev
      - UMAMI_URL=http://umami:3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:3000/"]
      timeout: 10s
      retries: 3
      start_period: 30s
      interval: 30s
    networks:
      - go-mission-network
    depends_on:
      - directus
      - umami

  # Directus CMS
  directus:
    image: directus/directus:11.8.0
    ports:
      - "9640:8055"
    volumes:
      - directus_data:/directus/uploads
      - directus_database:/directus/database
    environment:
      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'
      
      # Database
      DB_CLIENT: 'sqlite3'
      DB_FILENAME: '/directus/database/data.db'
      
      # Admin user (change these!)
      ADMIN_EMAIL: 'admin@go-mission.dk'
      ADMIN_PASSWORD: 'changeme123!'
      
      # General settings
      PUBLIC_URL: 'http://localhost:9640'
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'http://localhost:9639,http://localhost:3000'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:8055/server/health"]
      timeout: 10s
      retries: 5
      start_period: 30s
      interval: 30s
    networks:
      - go-mission-network

  # Umami Analytics
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "9641:3000"
    environment:
      DATABASE_URL: postgresql://umami:umamipass@umami_db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: umami-secret-key-change-this-in-production
      CORS_MAX_AGE: 86400
      CLIENT_IP_HEADER: x-forwarded-for
    depends_on:
      umami_db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/heartbeat || exit 1"]
      timeout: 10s
      retries: 5
      start_period: 30s
      interval: 30s
    networks:
      - go-mission-network

  # PostgreSQL Database for Umami
  umami_db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umamipass
    volumes:
      - umami_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami -d umami"]
      timeout: 10s
      retries: 5
      start_period: 10s
      interval: 30s
    networks:
      - go-mission-network

networks:
  go-mission-network:
    driver: bridge

volumes:
  directus_data:
  directus_database:
  umami_db_data: 